// Code generated by sqlc. DO NOT EDIT.

package merchant

import (
	"fmt"
	"time"

	"github.com/google/uuid"
	"github.com/jackc/pgtype"
)

type Role string

const (
	RoleBasePartner Role = "base_partner"
	RolePartner     Role = "partner"
	RoleAdmin       Role = "admin"
	RoleGuest       Role = "guest"
)

func (e *Role) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = Role(s)
	case string:
		*e = Role(s)
	default:
		return fmt.Errorf("unsupported scan type for Role: %T", src)
	}
	return nil
}

type Buyer struct {
	ID         pgtype.UUID
	FullName   string
	CreateTime time.Time
	Email      string
	Phone      string
	FirstName  string
	LastName   string
	MiddleName string
	Birth      time.Time
	Street     string
	Address    string
	City       string
	Country    string
	Postcode   int32
	ExtID      uuid.NullUUID
}

type Merchant struct {
	// Merchant unique index
	ID pgtype.UUID
	// Tiemestamp of creation
	CreateTime time.Time
	// Full name
	FullName string
	// Url
	Url string
	// Parent partner id
	PartnerID pgtype.UUID
}

type Partner struct {
	// Partner unique id
	ID pgtype.UUID
	// Timestamp of creation
	CreateTime time.Time
	// Full name
	FullName string
	// Url
	Url string
	// Partner API token
	ApiToken pgtype.UUID
	// Role
	Role Role
}

type SchemaMigration struct {
	Version int64
	Dirty   bool
}

type Shop struct {
	// Shop unique id
	ID pgtype.UUID
	// Timestamp of creation
	CreateTime time.Time
	// Shop full name
	FullName string
	// Parent merchant id
	MerchantID pgtype.UUID
	// Login phrase
	Login string
	// Password
	Password string
	// Url
	Url string
}

type Terminal struct {
	// Terminal unique id
	ID pgtype.UUID
	// Timestamp of creation
	CreateTime time.Time
	// Terminal full name
	FullName string
	// Parent shop id
	ShopID pgtype.UUID
	// Login phrase
	Login string
	// Password
	Password string
	// Url
	Url   string
	Token string
}
